% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inflation_adjust_cost.R
\name{inflation_adjust_cost}
\alias{inflation_adjust_cost}
\title{Calculate annual inflation adjusted costs}
\usage{
inflation_adjust_cost(from_year, to_year, from_cost, reference = NA,
  inflation_data = 0.035)
}
\arguments{
\item{from_year}{Date of cost to convert from}

\item{to_year}{Date to convert cost to}

\item{from_cost}{Cost at \code{from_year}}

\item{reference}{Source of data (string)}

\item{inflation_data}{NA default is fixed 3.5\% rate of inflation, \code{GDP_deflators}, \code{HCHS_pay} or \code{HCHS_price}.}
}
\value{
Inflated cost (scalar), with attributes:
\itemize{
  \item \code{from_year}
  \item \code{to_year}
  \item \code{from_cost}
  \item \code{reference}
 }
}
\description{
Up to the present time inflated upwards.
}
\details{
Option to use the

\itemize{
  \item \url{https://www.gov.uk/government/uploads/system/uploads/attachment_data/file/562750/GDP_Deflators_Qtrly_National_Accounts_September_2016_update_v2.csv}{ONS GDP_Deflators_Qtrly_National_Accounts}
(This document contains the latest gross domestic product (GDP) deflators.
The GDP deflator can be viewed as a measure of general inflation in the domestic economy)
  \item \url{https://www.pssru.ac.uk/pub/uc/uc2017/sources-of-information.pdf}{PSSRU annual inflation hospital and community health services}
 \item Fixed 3.5\%.
}

Can't download directly into function because the .csv on the website is too messy as-is.
This would be good to do though so that can always use latest version.
##TODO: webscraping? regular expressions?

\deqn{(1 + i_{1})(1 + i_{2}) \cdots (1 + i_{n}) \times C}

Clearly, for the same \code{i} each year this is simply
\deqn{C(1 + i)^n}
}
\examples{
from_year <- 2012
to_year <- 2015
from_cost <- 96.140

inflation_adjust_cost(from_year,
                      to_year,
                      from_cost,
                      fixed = FALSE)
#100

inflation_adjust_cost(from_year = 2010,
                      to_year = 2016,
                      from_cost = 1)
#1.229255
1*(1+0.035)^6

}
